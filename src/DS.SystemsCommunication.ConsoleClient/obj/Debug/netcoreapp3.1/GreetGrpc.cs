// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DS.SystemsCommunication.ConsoleClient {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    static readonly grpc::Marshaller<global::DS.SystemsCommunication.ConsoleClient.HelloRequest> __Marshaller_greet_HelloRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DS.SystemsCommunication.ConsoleClient.HelloRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DS.SystemsCommunication.ConsoleClient.HelloReply> __Marshaller_greet_HelloReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DS.SystemsCommunication.ConsoleClient.HelloReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest> __Marshaller_greet_RegistrationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DS.SystemsCommunication.ConsoleClient.RegistrationReply> __Marshaller_greet_RegistrationReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DS.SystemsCommunication.ConsoleClient.RegistrationReply.Parser.ParseFrom);

    static readonly grpc::Method<global::DS.SystemsCommunication.ConsoleClient.HelloRequest, global::DS.SystemsCommunication.ConsoleClient.HelloReply> __Method_SayHello = new grpc::Method<global::DS.SystemsCommunication.ConsoleClient.HelloRequest, global::DS.SystemsCommunication.ConsoleClient.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_greet_HelloRequest,
        __Marshaller_greet_HelloReply);

    static readonly grpc::Method<global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest, global::DS.SystemsCommunication.ConsoleClient.RegistrationReply> __Method_RegisterApplications = new grpc::Method<global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest, global::DS.SystemsCommunication.ConsoleClient.RegistrationReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterApplications",
        __Marshaller_greet_RegistrationRequest,
        __Marshaller_greet_RegistrationReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DS.SystemsCommunication.ConsoleClient.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Greeter</summary>
    public partial class GreeterClient : grpc::ClientBase<GreeterClient>
    {
      /// <summary>Creates a new client for Greeter</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GreeterClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Greeter that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GreeterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GreeterClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GreeterClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DS.SystemsCommunication.ConsoleClient.HelloReply SayHello(global::DS.SystemsCommunication.ConsoleClient.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DS.SystemsCommunication.ConsoleClient.HelloReply SayHello(global::DS.SystemsCommunication.ConsoleClient.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DS.SystemsCommunication.ConsoleClient.HelloReply> SayHelloAsync(global::DS.SystemsCommunication.ConsoleClient.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DS.SystemsCommunication.ConsoleClient.HelloReply> SayHelloAsync(global::DS.SystemsCommunication.ConsoleClient.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual global::DS.SystemsCommunication.ConsoleClient.RegistrationReply RegisterApplications(global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterApplications(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DS.SystemsCommunication.ConsoleClient.RegistrationReply RegisterApplications(global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterApplications, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DS.SystemsCommunication.ConsoleClient.RegistrationReply> RegisterApplicationsAsync(global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterApplicationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DS.SystemsCommunication.ConsoleClient.RegistrationReply> RegisterApplicationsAsync(global::DS.SystemsCommunication.ConsoleClient.RegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterApplications, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GreeterClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GreeterClient(configuration);
      }
    }

  }
}
#endregion
